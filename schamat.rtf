{\rtf1\ansi\ansicpg1250\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red248\green70\blue123;\red26\green26\blue26;\red245\green237\blue255;
\red120\green117\blue124;\red77\green203\blue224;\red129\green114\blue220;\red108\green211\blue125;\red172\green167\blue179;
\red250\green127\blue66;\red86\green84\blue89;\red251\green226\blue84;}
{\*\expandedcolortbl;;\cssrgb\c98824\c38039\c55294;\cssrgb\c13333\c13333\c13333;\cssrgb\c96863\c94510\c100000;
\cssrgb\c54510\c53333\c56078;\cssrgb\c35294\c83137\c90196;\cssrgb\c58039\c54118\c89020;\cssrgb\c48235\c84706\c56078;\cssrgb\c72941\c71373\c75294;
\cssrgb\c99216\c57647\c32549;\cssrgb\c41176\c40392\c42353;\cssrgb\c98824\c89804\c40000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  kivy\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 app \cf2 \strokec2 import\cf4 \strokec4  App\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 uix\cf5 \strokec5 .\cf4 \strokec4 widget \cf2 \strokec2 import\cf4 \strokec4  Widget\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 clock \cf2 \strokec2 import\cf4 \strokec4  Clock\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  random \cf2 \strokec2 import\cf4 \strokec4  randint\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 core\cf5 \strokec5 .\cf4 \strokec4 window \cf2 \strokec2 import\cf4 \strokec4  Window\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 lang \cf2 \strokec2 import\cf4 \strokec4  Builder\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 uix\cf5 \strokec5 .\cf4 \strokec4 floatlayout \cf2 \strokec2 import\cf4 \strokec4  FloatLayout\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 uix\cf5 \strokec5 .\cf4 \strokec4 screenmanager \cf2 \strokec2 import\cf4 \strokec4  ScreenManager\cf5 \strokec5 ,\cf4 \strokec4  Screen\cb1 \
\
\pard\pardeftab720\partightenfactor0

\f1\i \cf6 \cb3 \strokec6 class
\f0\i0 \cf4 \cb3 \strokec4  \cf6 \cb3 \strokec6 SnakePart\cf5 \cb3 \strokec5 (
\f1\i \cf6 \cb3 \strokec6 Widget
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 pass\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0

\f1\i \cf6 \cb3 \strokec6 class
\f0\i0 \cf4 \cb3 \strokec4  \cf6 \cb3 \strokec6 GameScreen\cf5 \cb3 \strokec5 (
\f1\i \cf6 \cb3 \strokec6 Widget
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     step_size \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 40\cf4 \cb1 \strokec4 \
\cb3     movement_x \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf4 \cb1 \strokec4 \
\cb3     movement_y \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf4 \cb1 \strokec4 \
\cb3     snake_parts \cf2 \strokec2 =\cf4 \strokec4  \cf5 \strokec5 []\cf4 \cb1 \strokec4 \
\
\cb3     
\f1\i \cf6 \cb3 \strokec6 def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 new_game\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         to_be_removed \cf2 \strokec2 =\cf4 \strokec4  \cf5 \strokec5 []\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 for\cf4 \strokec4  child \cf2 \strokec2 in\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 children\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  \cf8 \cb3 \strokec8 isinstance\cf5 \cb3 \strokec5 (\cf4 \strokec4 child\cf5 \strokec5 ,\cf4 \strokec4  SnakePart\cf5 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3                 to_be_removed\cf5 \strokec5 .\cf8 \cb3 \strokec8 append\cf5 \cb3 \strokec5 (\cf4 \strokec4 child\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 for\cf4 \strokec4  child \cf2 \strokec2 in\cf4 \strokec4  to_be_removed\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3             
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf8 \cb3 \strokec8 remove_widget\cf5 \cb3 \strokec5 (\cf4 \strokec4 child\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\
\
\cb3         
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 snake_parts \cf2 \strokec2 =\cf4 \strokec4  \cf5 \strokec5 []\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 movement_x \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 movement_y \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 score \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 game_over \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 False\cf4 \cb1 \strokec4 \
\cb3         head \cf2 \strokec2 =\cf4 \strokec4  \cf8 \cb3 \strokec8 SnakePart\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\cb3         head\cf5 \strokec5 .\cf4 \strokec4 pos \cf2 \strokec2 =\cf4 \strokec4  \cf5 \strokec5 (\cf7 \cb3 \strokec7 0\cf5 \cb3 \strokec5 ,\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf5 \cb3 \strokec5 )\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 snake_parts\cf5 \strokec5 .\cf8 \cb3 \strokec8 append\cf5 \cb3 \strokec5 (\cf4 \strokec4 head\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf8 \cb3 \strokec8 add_widget\cf5 \cb3 \strokec5 (\cf4 \strokec4 head\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     
\f1\i \cf6 \cb3 \strokec6 def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 restart_game\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf8 \cb3 \strokec8 new_game\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\
\cb3     
\f1\i \cf6 \cb3 \strokec6 def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 on_touch_up\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ,\cf4 \strokec4  
\f1\i \cf10 \cb3 \strokec10 touch
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         dx \cf2 \strokec2 =\cf4 \strokec4  touch\cf5 \strokec5 .\cf4 \strokec4 x \cf2 \strokec2 -\cf4 \strokec4  touch\cf5 \strokec5 .\cf4 \strokec4 opos\cf5 \strokec5 [\cf7 \cb3 \strokec7 0\cf5 \cb3 \strokec5 ]\cf4 \cb1 \strokec4 \
\cb3         dy \cf2 \strokec2 =\cf4 \strokec4  touch\cf5 \strokec5 .\cf4 \strokec4 y \cf2 \strokec2 -\cf4 \strokec4  touch\cf5 \strokec5 .\cf4 \strokec4 opos\cf5 \strokec5 [\cf7 \cb3 \strokec7 1\cf5 \cb3 \strokec5 ]\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  \cf8 \cb3 \strokec8 abs\cf5 \cb3 \strokec5 (\cf4 \strokec4 dx\cf5 \strokec5 )\cf4 \strokec4  \cf2 \strokec2 >\cf4 \strokec4  \cf8 \cb3 \strokec8 abs\cf5 \cb3 \strokec5 (\cf4 \strokec4 dy\cf5 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3             
\f1\i \cf11 \cb3 \strokec11 # Moving left or right
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3             
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 movement_y \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  dx \cf2 \strokec2 >\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf5 \cb3 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3                 
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 movement_x \cf2 \strokec2 =\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 step_size\cb1 \
\cb3             \cf2 \strokec2 else\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3                 
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 movement_x \cf2 \strokec2 =\cf4 \strokec4  \cf2 \strokec2 -\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 step_size\cb1 \
\cb3         \cf2 \strokec2 else\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3             
\f1\i \cf11 \cb3 \strokec11 # Moving up or down
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3             
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 movement_x \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  dy \cf2 \strokec2 >\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf5 \cb3 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3                 
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 movement_y \cf2 \strokec2 =\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 step_size\cb1 \
\cb3             \cf2 \strokec2 else\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3                 
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 movement_y \cf2 \strokec2 =\cf4 \strokec4  \cf2 \strokec2 -\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 step_size\cb1 \
\
\cb3     
\f1\i \cf6 \cb3 \strokec6 def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 collides_widget\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ,\cf4 \strokec4  
\f1\i \cf10 \cb3 \strokec10 wid1
\f0\i0 \cf5 \cb3 \strokec5 ,\cf4 \strokec4  
\f1\i \cf10 \cb3 \strokec10 wid2
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  wid1\cf5 \strokec5 .\cf4 \strokec4 right \cf2 \strokec2 <=\cf4 \strokec4  wid2\cf5 \strokec5 .\cf4 \strokec4 x\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 return\cf4 \strokec4  \cf7 \cb3 \strokec7 False\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  wid1\cf5 \strokec5 .\cf4 \strokec4 x \cf2 \strokec2 >=\cf4 \strokec4  wid2\cf5 \strokec5 .\cf4 \strokec4 right\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 return\cf4 \strokec4  \cf7 \cb3 \strokec7 False\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  wid1\cf5 \strokec5 .\cf4 \strokec4 top \cf2 \strokec2 <=\cf4 \strokec4  wid2\cf5 \strokec5 .\cf4 \strokec4 y\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 return\cf4 \strokec4  \cf7 \cb3 \strokec7 False\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  wid1\cf5 \strokec5 .\cf4 \strokec4 y \cf2 \strokec2 >=\cf4 \strokec4  wid2\cf5 \strokec5 .\cf4 \strokec4 top\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 return\cf4 \strokec4  \cf7 \cb3 \strokec7 False\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 return\cf4 \strokec4  \cf7 \cb3 \strokec7 True\cf4 \cb1 \strokec4 \
\
\cb3     
\f1\i \cf6 \cb3 \strokec6 def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 next_frame\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 *
\f1\i \cf10 \cb3 \strokec10 args
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf11 \cb3 \strokec11 # Move the snake
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 game_over\cf5 \strokec5 :\cf4 \strokec4  \cf2 \strokec2 return\cf4 \cb1 \strokec4 \
\cb3         head \cf2 \strokec2 =\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 snake_parts\cf5 \strokec5 [\cf7 \cb3 \strokec7 0\cf5 \cb3 \strokec5 ]\cf4 \cb1 \strokec4 \
\cb3         food \cf2 \strokec2 =\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 ids\cf5 \strokec5 .\cf4 \strokec4 food\cb1 \
\cb3         last_x \cf2 \strokec2 =\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 snake_parts\cf5 \strokec5 [\cf2 \strokec2 -\cf7 \cb3 \strokec7 1\cf5 \cb3 \strokec5 ].\cf4 \strokec4 x\cb1 \
\cb3         last_y \cf2 \strokec2 =\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 snake_parts\cf5 \strokec5 [\cf2 \strokec2 -\cf7 \cb3 \strokec7 1\cf5 \cb3 \strokec5 ].\cf4 \strokec4 y\cb1 \
\
\cb3         
\f1\i \cf11 \cb3 \strokec11 # Move the body
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 for\cf4 \strokec4  i\cf5 \strokec5 ,\cf4 \strokec4  part \cf2 \strokec2 in\cf4 \strokec4  \cf8 \cb3 \strokec8 enumerate\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 snake_parts\cf5 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  i \cf2 \strokec2 ==\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf5 \cb3 \strokec5 :\cf4 \cb1 \strokec4 \
\cb3                 \cf2 \strokec2 continue\cf4 \cb1 \strokec4 \
\cb3             part\cf5 \strokec5 .\cf4 \strokec4 new_y \cf2 \strokec2 =\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 snake_parts\cf5 \strokec5 [\cf4 \strokec4 i\cf2 \strokec2 -\cf7 \cb3 \strokec7 1\cf5 \cb3 \strokec5 ].\cf4 \strokec4 y\cb1 \
\cb3             part\cf5 \strokec5 .\cf4 \strokec4 new_x \cf2 \strokec2 =\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 snake_parts\cf5 \strokec5 [\cf4 \strokec4 i\cf2 \strokec2 -\cf7 \cb3 \strokec7 1\cf5 \cb3 \strokec5 ].\cf4 \strokec4 x\cb1 \
\cb3         \cf2 \strokec2 for\cf4 \strokec4  part \cf2 \strokec2 in\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 snake_parts\cf5 \strokec5 [\cf7 \cb3 \strokec7 1\cf5 \cb3 \strokec5 :]:\cf4 \cb1 \strokec4 \
\cb3             part\cf5 \strokec5 .\cf4 \strokec4 y \cf2 \strokec2 =\cf4 \strokec4  part\cf5 \strokec5 .\cf4 \strokec4 new_y\cb1 \
\cb3             part\cf5 \strokec5 .\cf4 \strokec4 x \cf2 \strokec2 =\cf4 \strokec4  part\cf5 \strokec5 .\cf4 \strokec4 new_x\cb1 \
\
\cb3         
\f1\i \cf11 \cb3 \strokec11 # Move the head
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3         head\cf5 \strokec5 .\cf4 \strokec4 x \cf2 \strokec2 +=\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 movement_x\cb1 \
\cb3         head\cf5 \strokec5 .\cf4 \strokec4 y \cf2 \strokec2 +=\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 movement_y\cb1 \
\
\
\
\
\cb3         
\f1\i \cf11 \cb3 \strokec11 # Check for snake colliding with food
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf8 \cb3 \strokec8 collides_widget\cf5 \cb3 \strokec5 (\cf4 \strokec4 head\cf5 \strokec5 ,\cf4 \strokec4  food\cf5 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3             food\cf5 \strokec5 .\cf4 \strokec4 x \cf2 \strokec2 =\cf4 \strokec4  \cf8 \cb3 \strokec8 randint\cf5 \cb3 \strokec5 (\cf7 \cb3 \strokec7 0\cf5 \cb3 \strokec5 ,\cf4 \strokec4  \cf5 \strokec5 (\cf4 \strokec4 Window\cf5 \strokec5 .\cf4 \strokec4 width\cf2 \strokec2 -\cf4 \strokec4 food\cf5 \strokec5 .\cf4 \strokec4 width\cf5 \strokec5 )\cf4 \strokec4  \cf2 \strokec2 //\cf4 \strokec4  \cf7 \cb3 \strokec7 40\cf4 \cb3 \strokec4  \cf5 \strokec5 )\cf4 \strokec4  \cf2 \strokec2 *\cf4 \strokec4  \cf7 \cb3 \strokec7 40\cf4 \cb1 \strokec4 \
\cb3             food\cf5 \strokec5 .\cf4 \strokec4 y \cf2 \strokec2 =\cf4 \strokec4  \cf8 \cb3 \strokec8 randint\cf5 \cb3 \strokec5 (\cf7 \cb3 \strokec7 0\cf5 \cb3 \strokec5 ,\cf4 \strokec4  \cf5 \strokec5 (\cf4 \strokec4 Window\cf5 \strokec5 .\cf4 \strokec4 height \cf2 \strokec2 -\cf4 \strokec4  food\cf5 \strokec5 .\cf4 \strokec4 height\cf5 \strokec5 )\cf4 \strokec4  \cf2 \strokec2 //\cf4 \strokec4  \cf7 \cb3 \strokec7 40\cf5 \cb3 \strokec5 )\cf4 \strokec4  \cf2 \strokec2 *\cf4 \strokec4  \cf7 \cb3 \strokec7 40\cf4 \cb1 \strokec4 \
\cb3             new_part \cf2 \strokec2 =\cf4 \strokec4  \cf8 \cb3 \strokec8 SnakePart\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\cb3             new_part\cf5 \strokec5 .\cf4 \strokec4 x \cf2 \strokec2 =\cf4 \strokec4  last_x\cb1 \
\cb3             new_part\cf5 \strokec5 .\cf4 \strokec4 y \cf2 \strokec2 =\cf4 \strokec4  last_y\cb1 \
\cb3             
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 snake_parts\cf5 \strokec5 .\cf8 \cb3 \strokec8 append\cf5 \cb3 \strokec5 (\cf4 \strokec4 new_part\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\cb3             
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf8 \cb3 \strokec8 add_widget\cf5 \cb3 \strokec5 (\cf4 \strokec4 new_part\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\cb3             
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 score \cf2 \strokec2 +=\cf4 \strokec4  \cf7 \cb3 \strokec7 1\cf4 \cb1 \strokec4 \
\cb3             App\cf5 \strokec5 .\cf8 \cb3 \strokec8 get_running_app\cf5 \cb3 \strokec5 ().\cf8 \cb3 \strokec8 speed_up\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\
\cb3         
\f1\i \cf11 \cb3 \strokec11 # Check for snake colliding with snake
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 for\cf4 \strokec4  part \cf2 \strokec2 in\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 snake_parts\cf5 \strokec5 [\cf7 \cb3 \strokec7 1\cf5 \cb3 \strokec5 :]:\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf8 \cb3 \strokec8 collides_widget\cf5 \cb3 \strokec5 (\cf4 \strokec4 part\cf5 \strokec5 ,\cf4 \strokec4  head\cf5 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3                 
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf8 \cb3 \strokec8 new_game\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\cb3                 App\cf5 \strokec5 .\cf8 \cb3 \strokec8 get_running_app\cf5 \cb3 \strokec5 ().\cf8 \cb3 \strokec8 reset_interval\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\cb3                 
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 game_over \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 True\cf4 \cb1 \strokec4 \
\
\cb3         
\f1\i \cf11 \cb3 \strokec11 # Check for snake colliding with wall
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  \cf2 \strokec2 not\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf8 \cb3 \strokec8 collides_widget\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ,\cf4 \strokec4  head\cf5 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3             
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf8 \cb3 \strokec8 new_game\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\cb3             App\cf5 \strokec5 .\cf8 \cb3 \strokec8 get_running_app\cf5 \cb3 \strokec5 ().\cf8 \cb3 \strokec8 reset_interval\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\cb3             
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 game_over \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 True\
\
\pard\pardeftab720\partightenfactor0

\f1\i \cf6 \cb3 \strokec6 class
\f0\i0 \cf4 \cb3 \strokec4  \cf6 \cb3 \strokec6 MainApp\cf5 \cb3 \strokec5 (
\f1\i \cf6 \cb3 \strokec6 App
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3     	initial_interval \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 .25\cf4 \cb3 \strokec4   
\f1\i \cf11 \cb3 \strokec11 # Initial interval value
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3     	interval \cf2 \strokec2 =\cf4 \strokec4  initial_interval\cb1 \
\cb3     	speedup_factor \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 0.90\cf4 \cb3 \strokec4   
\f1\i \cf11 \cb3 \strokec11 # Amount to decrease the interval by
\f0\i0 \cf4 \cb1 \strokec4 \

\f1\i \cf6 \cb3 \strokec6 	def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 on_start\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 root\cf5 \strokec5 .\cf8 \cb3 \strokec8 new_game\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\cb3         Clock\cf5 \strokec5 .\cf8 \cb3 \strokec8 schedule_interval\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 root\cf5 \strokec5 .\cf4 \strokec4 next_frame\cf5 \strokec5 ,\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 interval\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\
\cb3     	
\f1\i \cf6 \cb3 \strokec6 def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 speed_up\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 interval \cf2 \strokec2 *=\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 speedup_factor\cb1 \
\cb3         Clock\cf5 \strokec5 .\cf8 \cb3 \strokec8 unschedule\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 root\cf5 \strokec5 .\cf4 \strokec4 next_frame\cf5 \strokec5 )\cf4 \strokec4   
\f1\i \cf11 \cb3 \strokec11 # Unschedule the previous interval
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3         Clock\cf5 \strokec5 .\cf8 \cb3 \strokec8 schedule_interval\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 root\cf5 \strokec5 .\cf4 \strokec4 next_frame\cf5 \strokec5 ,\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 interval\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\
\cb3     	
\f1\i \cf6 \cb3 \strokec6 def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 reset_interval\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 interval \cf2 \strokec2 =\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 initial_interval\cb1 \
\cb3         Clock\cf5 \strokec5 .\cf8 \cb3 \strokec8 unschedule\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 root\cf5 \strokec5 .\cf4 \strokec4 next_frame\cf5 \strokec5 )\cf4 \strokec4   
\f1\i \cf11 \cb3 \strokec11 # Unschedule the previous interval
\f0\i0 \cf4 \cb1 \strokec4 \
\cb3         Clock\cf5 \strokec5 .\cf8 \cb3 \strokec8 schedule_interval\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 root\cf5 \strokec5 .\cf4 \strokec4 next_frame\cf5 \strokec5 ,\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 .\cf4 \strokec4 interval\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 if\cf4 \strokec4  \cf6 \cb3 \strokec6 __name__\cf4 \cb3 \strokec4  \cf2 \strokec2 ==\cf4 \strokec4  \cf5 \strokec5 "\cf12 \cb3 \strokec12 __main__\cf5 \cb3 \strokec5 ":\cf4 \cb1 \strokec4 \
\cb3    	 \cf8 \cb3 \strokec8 MainApp\cf5 \cb3 \strokec5 ().\cf8 \cb3 \strokec8 run\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \
\
\
\
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 import\cf4 \strokec4  kivy\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 core\cf5 \strokec5 .\cf4 \strokec4 window \cf2 \strokec2 import\cf4 \strokec4  Window\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 app \cf2 \strokec2 import\cf4 \strokec4  App\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 clock \cf2 \strokec2 import\cf4 \strokec4  Clock\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 graphics \cf2 \strokec2 import\cf4 \strokec4  Color\cf5 \strokec5 ,\cf4 \strokec4  Line\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 properties \cf2 \strokec2 import\cf4 \strokec4  StringProperty\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 uix\cf5 \strokec5 .\cf4 \strokec4 label \cf2 \strokec2 import\cf4 \strokec4  Label\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 uix\cf5 \strokec5 .\cf4 \strokec4 popup \cf2 \strokec2 import\cf4 \strokec4  Popup\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 uix\cf5 \strokec5 .\cf4 \strokec4 button \cf2 \strokec2 import\cf4 \strokec4  Button\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 uix\cf5 \strokec5 .\cf4 \strokec4 boxlayout \cf2 \strokec2 import\cf4 \strokec4  BoxLayout\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 uix\cf5 \strokec5 .\cf4 \strokec4 floatlayout \cf2 \strokec2 import\cf4 \strokec4  FloatLayout\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 uix\cf5 \strokec5 .\cf4 \strokec4 screenmanager \cf2 \strokec2 import\cf4 \strokec4  ScreenManager\cf5 \strokec5 ,\cf4 \strokec4  Screen\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  random \cf2 \strokec2 import\cf4 \strokec4  randint\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 uix\cf5 \strokec5 .\cf4 \strokec4 dropdown \cf2 \strokec2 import\cf4 \strokec4  DropDown\cb1 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  kivy\cf5 \strokec5 .\cf4 \strokec4 lang \cf2 \strokec2 import\cf4 \strokec4  Builder\cb1 \
\
\

\f1\i \cf6 \cb3 \strokec6 class
\f0\i0 \cf4 \cb3 \strokec4  \cf6 \cb3 \strokec6 MenuScreen\cf5 \cb3 \strokec5 (
\f1\i \cf6 \cb3 \strokec6 Screen
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\
\cb3     
\f1\i \cf6 \cb3 \strokec6 def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 __init__\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 **
\f1\i \cf10 \cb3 \strokec10 kwargs
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         
\f1\i \cf6 \cb3 \strokec6 super
\f0\i0 \cf5 \cb3 \strokec5 (\cf4 \strokec4 MenuScreen\cf5 \strokec5 ,\cf4 \strokec4  
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ).\cf8 \cb3 \strokec8 __init__\cf5 \cb3 \strokec5 (\cf2 \strokec2 **\cf4 \strokec4 kwargs\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\
\cb3     
\f1\i \cf6 \cb3 \strokec6 def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 new_game\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         sm\cf5 \strokec5 .\cf8 \cb3 \strokec8 get_screen\cf5 \cb3 \strokec5 ('\cf12 \cb3 \strokec12 game\cf5 \cb3 \strokec5 ').\cf4 \strokec4 step_size \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 40\cf4 \cb1 \strokec4 \
\cb3         sm\cf5 \strokec5 .\cf8 \cb3 \strokec8 get_screen\cf5 \cb3 \strokec5 ('\cf12 \cb3 \strokec12 game\cf5 \cb3 \strokec5 ').\cf4 \strokec4 movement_x \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf4 \cb1 \strokec4 \
\cb3         sm\cf5 \strokec5 .\cf8 \cb3 \strokec8 get_screen\cf5 \cb3 \strokec5 ('\cf12 \cb3 \strokec12 game\cf5 \cb3 \strokec5 ').\cf4 \strokec4 movement_y \cf2 \strokec2 =\cf4 \strokec4  \cf7 \cb3 \strokec7 0\cf4 \cb1 \strokec4 \
\cb3         sm\cf5 \strokec5 .\cf8 \cb3 \strokec8 get_screen\cf5 \cb3 \strokec5 ('\cf12 \cb3 \strokec12 game\cf5 \cb3 \strokec5 ').\cf4 \strokec4 snake_parts \cf2 \strokec2 =\cf4 \strokec4  \cf5 \strokec5 []\cf4 \cb1 \strokec4 \
\cb3         sm\cf5 \strokec5 .\cf4 \strokec4 current \cf2 \strokec2 =\cf4 \strokec4  \cf5 \strokec5 '\cf12 \cb3 \strokec12 game\cf5 \cb3 \strokec5 '\cf4 \cb1 \strokec4 \
\cb3                 \cb1 \
\cb3     
\f1\i \cf6 \cb3 \strokec6 def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 go_to_settings\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         sm\cf5 \strokec5 .\cf4 \strokec4 current \cf2 \strokec2 =\cf4 \strokec4  \cf5 \strokec5 '\cf12 \cb3 \strokec12 settings\cf5 \cb3 \strokec5 '\cf4 \cb1 \strokec4 \
\

\f1\i \cf6 \cb3 \strokec6 class
\f0\i0 \cf4 \cb3 \strokec4  \cf6 \cb3 \strokec6 GameScreen\cf5 \cb3 \strokec5 (
\f1\i \cf6 \cb3 \strokec6 Screen
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 pass\cf4 \cb1 \strokec4 \
\

\f1\i \cf6 \cb3 \strokec6 class
\f0\i0 \cf4 \cb3 \strokec4  \cf6 \cb3 \strokec6 SettingsScreen\cf5 \cb3 \strokec5 (
\f1\i \cf6 \cb3 \strokec6 Screen
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 pass\cf4 \cb1 \strokec4 \
\

\f1\i \cf6 \cb3 \strokec6 class
\f0\i0 \cf4 \cb3 \strokec4  \cf6 \cb3 \strokec6 WindowManager\cf5 \cb3 \strokec5 (
\f1\i \cf6 \cb3 \strokec6 ScreenManager
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 pass\cf4 \cb1 \strokec4 \
\
\cb3 kv \cf2 \strokec2 =\cf4 \strokec4  Builder\cf5 \strokec5 .\cf8 \cb3 \strokec8 load_file\cf5 \cb3 \strokec5 ('\cf12 \cb3 \strokec12 main.kv\cf5 \cb3 \strokec5 ')\cf4 \cb1 \strokec4 \
\
\cb3 sm \cf2 \strokec2 =\cf4 \strokec4  \cf8 \cb3 \strokec8 ScreenManager\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\cb3 sm\cf5 \strokec5 .\cf8 \cb3 \strokec8 add_widget\cf5 \cb3 \strokec5 (\cf8 \cb3 \strokec8 MenuScreen\cf5 \cb3 \strokec5 (
\f1\i \cf10 \cb3 \strokec10 name
\f0\i0 \cf4 \cb3 \strokec4  \cf2 \strokec2 =\cf4 \strokec4  \cf5 \strokec5 '\cf12 \cb3 \strokec12 menu\cf5 \cb3 \strokec5 '))\cf4 \cb1 \strokec4 \
\cb3 sm\cf5 \strokec5 .\cf8 \cb3 \strokec8 add_widget\cf5 \cb3 \strokec5 (\cf8 \cb3 \strokec8 SettingsScreen\cf5 \cb3 \strokec5 (
\f1\i \cf10 \cb3 \strokec10 name
\f0\i0 \cf4 \cb3 \strokec4  \cf2 \strokec2 =\cf4 \strokec4  \cf5 \strokec5 '\cf12 \cb3 \strokec12 settings\cf5 \cb3 \strokec5 '))\cf4 \cb1 \strokec4 \
\cb3 sm\cf5 \strokec5 .\cf8 \cb3 \strokec8 add_widget\cf5 \cb3 \strokec5 (\cf8 \cb3 \strokec8 GameScreen\cf5 \cb3 \strokec5 (
\f1\i \cf10 \cb3 \strokec10 name
\f0\i0 \cf4 \cb3 \strokec4  \cf2 \strokec2 =\cf4 \strokec4  \cf5 \strokec5 '\cf12 \cb3 \strokec12 game\cf5 \cb3 \strokec5 '))\cf4 \strokec4         \cb1 \
\cb3         \cb1 \

\f1\i \cf6 \cb3 \strokec6 class
\f0\i0 \cf4 \cb3 \strokec4  \cf6 \cb3 \strokec6 MyApp\cf5 \cb3 \strokec5 (
\f1\i \cf6 \cb3 \strokec6 App
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3     
\f1\i \cf6 \cb3 \strokec6 def
\f0\i0 \cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 build\cf5 \cb3 \strokec5 (
\f1\i \cf9 \cb3 \strokec9 self
\f0\i0 \cf5 \cb3 \strokec5 ):\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 return\cf4 \strokec4  sm\cb1 \
\
\cf2 \cb3 \strokec2 if\cf4 \strokec4  \cf6 \cb3 \strokec6 __name__\cf4 \cb3 \strokec4  \cf2 \strokec2 ==\cf4 \strokec4  \cf5 \strokec5 '\cf12 \cb3 \strokec12 __main__\cf5 \cb3 \strokec5 ':\cf4 \cb1 \strokec4 \
\cb3     \cf8 \cb3 \strokec8 MyApp\cf5 \cb3 \strokec5 ().\cf8 \cb3 \strokec8 run\cf5 \cb3 \strokec5 ()\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \
}